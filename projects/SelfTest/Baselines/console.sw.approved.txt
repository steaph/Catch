
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CatchSelfTest is a Catch v1.0 b10 host application.
Run with -? for options

-------------------------------------------------------------------------------
./succeeding/Approx/simple
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( d == Approx( 1.23 ) )
with expansion:
  1.23 == Approx( 1.23 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( d != Approx( 1.22 ) )
with expansion:
  1.23 != Approx( 1.22 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( d != Approx( 1.24 ) )
with expansion:
  1.23 != Approx( 1.24 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( Approx( d ) == 1.23 )
with expansion:
  Approx( 1.23 ) == 1.23

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( Approx( d ) != 1.22 )
with expansion:
  Approx( 1.23 ) != 1.22

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( Approx( d ) != 1.24 )
with expansion:
  Approx( 1.23 ) != 1.24

-------------------------------------------------------------------------------
./succeeding/Approx/epsilon
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( d != Approx( 1.231 ) )
with expansion:
  1.23 != Approx( 1.231 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( d == Approx( 1.231 ).epsilon( 0.1 ) )
with expansion:
  1.23 == Approx( 1.231 )

-------------------------------------------------------------------------------
./succeeding/Approx/float
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( 1.23f == Approx( 1.23f ) )
with expansion:
  1.23 == Approx( 1.23 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( 0.0f == Approx( 0.0f ) )
with expansion:
  0 == Approx( 0 )

-------------------------------------------------------------------------------
./succeeding/Approx/int
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( 1 == Approx( 1 ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( 0 == Approx( 0 ) )

-------------------------------------------------------------------------------
./succeeding/Approx/mixed
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( 1.0f == Approx( 1 ) )
with expansion:
  1 == Approx( 1 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( 0 == Approx( dZero) )
with expansion:
  0 == Approx( 0 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( 0 == Approx( dSmall ).epsilon( 0.001 ) )
with expansion:
  0 == Approx( 1e-05 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( 1.234f == Approx( dMedium ) )
with expansion:
  1.234 == Approx( 1.234 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( dMedium == Approx( 1.234f ) )
with expansion:
  1.234 == Approx( 1.234 )

-------------------------------------------------------------------------------
./succeeding/Approx/custom
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( d == approx( 1.23 ) )
with expansion:
  1.23 == Approx( 1.23 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( d == approx( 1.22 ) )
with expansion:
  1.23 == Approx( 1.22 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( d == approx( 1.24 ) )
with expansion:
  1.23 == Approx( 1.24 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( d != approx( 1.25 ) )
with expansion:
  1.23 != Approx( 1.25 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( approx( d ) == 1.23 )
with expansion:
  Approx( 1.23 ) == 1.23

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( approx( d ) == 1.22 )
with expansion:
  Approx( 1.23 ) == 1.22

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( approx( d ) == 1.24 )
with expansion:
  Approx( 1.23 ) == 1.24

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( approx( d ) != 1.25 )
with expansion:
  Approx( 1.23 ) != 1.25

-------------------------------------------------------------------------------
Approximate PI
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( divide( 22, 7 ) == Approx( 3.141 ).epsilon( 0.001 ) )
with expansion:
  3.1428571429 == Approx( 3.141 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ApproxTests.cpp:
PASSED:
  REQUIRE( divide( 22, 7 ) != Approx( 3.141 ).epsilon( 0.0001 ) )
with expansion:
  3.1428571429 != Approx( 3.141 )

-------------------------------------------------------------------------------
./succeeding/TestClass/succeedingCase
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ClassTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ClassTests.cpp:
PASSED:
  REQUIRE( s == "hello" )
with expansion:
  "hello" == "hello"

-------------------------------------------------------------------------------
./failing/TestClass/failingCase
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ClassTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ClassTests.cpp: FAILED:
  REQUIRE( s == "world" )
with expansion:
  "hello" == "world"

-------------------------------------------------------------------------------
./succeeding/Fixture/succeedingCase
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ClassTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ClassTests.cpp:
PASSED:
  REQUIRE( m_a == 1 )
with expansion:
  1 == 1

-------------------------------------------------------------------------------
./failing/Fixture/failingCase
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ClassTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ClassTests.cpp: FAILED:
  REQUIRE( m_a == 2 )
with expansion:
  1 == 2

-------------------------------------------------------------------------------
./succeeding/conditions/equality
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven == 7 )
with expansion:
  7 == 7

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.float_nine_point_one == Approx( 9.1f ) )
with expansion:
  9.1 == Approx( 9.1 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.double_pi == Approx( 3.1415926535 ) )
with expansion:
  3.1415926535 == Approx( 3.14159 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello == "hello" )
with expansion:
  "hello" == "hello"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( "hello" == data.str_hello )
with expansion:
  "hello" == "hello"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello.size() == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( x == Approx( 1.3 ) )
with expansion:
  1.3 == Approx( 1.3 )

-------------------------------------------------------------------------------
./failing/conditions/equality
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven == 6 )
with expansion:
  7 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven == 8 )
with expansion:
  7 == 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven == 0 )
with expansion:
  7 == 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.float_nine_point_one == Approx( 9.11f ) )
with expansion:
  9.1 == Approx( 9.11 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.float_nine_point_one == Approx( 9.0f ) )
with expansion:
  9.1 == Approx( 9 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.float_nine_point_one == Approx( 1 ) )
with expansion:
  9.1 == Approx( 1 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.float_nine_point_one == Approx( 0 ) )
with expansion:
  9.1 == Approx( 0 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.double_pi == Approx( 3.1415 ) )
with expansion:
  3.1415926535 == Approx( 3.1415 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello == "goodbye" )
with expansion:
  "hello" == "goodbye"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello == "hell" )
with expansion:
  "hello" == "hell"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello == "hello1" )
with expansion:
  "hello" == "hello1"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello.size() == 6 )
with expansion:
  5 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( x == Approx( 1.301 ) )
with expansion:
  1.3 == Approx( 1.301 )

-------------------------------------------------------------------------------
./succeeding/conditions/inequality
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven != 6 )
with expansion:
  7 != 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven != 8 )
with expansion:
  7 != 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.float_nine_point_one != Approx( 9.11f ) )
with expansion:
  9.1 != Approx( 9.11 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.float_nine_point_one != Approx( 9.0f ) )
with expansion:
  9.1 != Approx( 9 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.float_nine_point_one != Approx( 1 ) )
with expansion:
  9.1 != Approx( 1 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.float_nine_point_one != Approx( 0 ) )
with expansion:
  9.1 != Approx( 0 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.double_pi != Approx( 3.1415 ) )
with expansion:
  3.1415926535 != Approx( 3.1415 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello != "goodbye" )
with expansion:
  "hello" != "goodbye"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello != "hell" )
with expansion:
  "hello" != "hell"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello != "hello1" )
with expansion:
  "hello" != "hello1"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello.size() != 6 )
with expansion:
  5 != 6

-------------------------------------------------------------------------------
./failing/conditions/inequality
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven != 7 )
with expansion:
  7 != 7

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.float_nine_point_one != Approx( 9.1f ) )
with expansion:
  9.1 != Approx( 9.1 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.double_pi != Approx( 3.1415926535 ) )
with expansion:
  3.1415926535 != Approx( 3.14159 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello != "hello" )
with expansion:
  "hello" != "hello"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello.size() != 5 )
with expansion:
  5 != 5

-------------------------------------------------------------------------------
./succeeding/conditions/ordered
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven < 8 )
with expansion:
  7 < 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven > 6 )
with expansion:
  7 > 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven > 0 )
with expansion:
  7 > 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven > -1 )
with expansion:
  7 > -1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven >= 7 )
with expansion:
  7 >= 7

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven >= 6 )
with expansion:
  7 >= 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven <= 7 )
with expansion:
  7 <= 7

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.int_seven <= 8 )
with expansion:
  7 <= 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.float_nine_point_one > 9 )
with expansion:
  9.1 > 9

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.float_nine_point_one < 10 )
with expansion:
  9.1 < 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.float_nine_point_one < 9.2 )
with expansion:
  9.1 < 9.2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello <= "hello" )
with expansion:
  "hello" <= "hello"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello >= "hello" )
with expansion:
  "hello" >= "hello"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello < "hellp" )
with expansion:
  "hello" < "hellp"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello < "zebra" )
with expansion:
  "hello" < "zebra"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello > "hellm" )
with expansion:
  "hello" > "hellm"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( data.str_hello > "a" )
with expansion:
  "hello" > "a"

-------------------------------------------------------------------------------
./failing/conditions/ordered
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven > 7 )
with expansion:
  7 > 7

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven < 7 )
with expansion:
  7 < 7

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven > 8 )
with expansion:
  7 > 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven < 6 )
with expansion:
  7 < 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven < 0 )
with expansion:
  7 < 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven < -1 )
with expansion:
  7 < -1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven >= 8 )
with expansion:
  7 >= 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.int_seven <= 6 )
with expansion:
  7 <= 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.float_nine_point_one < 9 )
with expansion:
  9.1 < 9

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.float_nine_point_one > 10 )
with expansion:
  9.1 > 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.float_nine_point_one > 9.2 )
with expansion:
  9.1 > 9.2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello > "hello" )
with expansion:
  "hello" > "hello"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello < "hello" )
with expansion:
  "hello" < "hello"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello > "hellp" )
with expansion:
  "hello" > "hellp"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello > "z" )
with expansion:
  "hello" > "z"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello < "hellm" )
with expansion:
  "hello" < "hellm"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello < "a" )
with expansion:
  "hello" < "a"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello >= "z" )
with expansion:
  "hello" >= "z"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( data.str_hello <= "a" )
with expansion:
  "hello" <= "a"

-------------------------------------------------------------------------------
./succeeding/conditions/int literals
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( i == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( ui == 2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( l == 3 )
with expansion:
  3 == 3

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( ul == 4 )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( c == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( uc == 6 )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( 1 == i )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( 2 == ui )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( 3 == l )
with expansion:
  3 == 3

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( 4 == ul )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( 5 == c )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( 6 == uc )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( (std::numeric_limits<unsigned long>::max)() > ul )
with expansion:
  0x<hex digits> > 4

-------------------------------------------------------------------------------
./succeeding/conditions//long_to_unsigned_x
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( long_var == unsigned_char_var )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( long_var == unsigned_short_var )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( long_var == unsigned_int_var )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( long_var == unsigned_long_var )
with expansion:
  1 == 1

-------------------------------------------------------------------------------
./succeeding/conditions/const ints to int literal
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( unsigned_char_var == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( unsigned_short_var == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( unsigned_int_var == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( unsigned_long_var == 1 )
with expansion:
  1 == 1

-------------------------------------------------------------------------------
./succeeding/conditions/negative ints
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  CHECK( ( -1 > 2u ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  CHECK( -1 > 2u )
with expansion:
  -1 > 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  CHECK( ( 2u < -1 ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  CHECK( 2u < -1 )
with expansion:
  2 < -1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  CHECK( ( minInt > 2u ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  CHECK( minInt > 2u )
with expansion:
  -2147483648 > 2

-------------------------------------------------------------------------------
./succeeding/conditions/computed ints
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  CHECK( 54 == 6*9 )
with expansion:
  54 == 54

-------------------------------------------------------------------------------
./succeeding/conditions/ptr
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( p == __null )
with expansion:
  __null == 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( p == pNULL )
with expansion:
  __null == __null

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( p != __null )
with expansion:
  0x<hex digits> != 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( cp != __null )
with expansion:
  0x<hex digits> != 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( cpc != __null )
with expansion:
  0x<hex digits> != 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( returnsNull() == __null )
with expansion:
  {null string} == 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( returnsConstNull() == __null )
with expansion:
  {null string} == 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( __null != p )
with expansion:
  0 != 0x<hex digits>

-------------------------------------------------------------------------------
./succeeding/conditions/not
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( false == false )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( true == true )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( !false )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE_FALSE( false )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( !falseValue )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE_FALSE( falseValue )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE( !(1 == 2) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp:
PASSED:
  REQUIRE_FALSE( 1 == 2 )
with expansion:
  !(1 == 2)

-------------------------------------------------------------------------------
./failing/conditions/not
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( false != false )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( true != true )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( !true )
with expansion:
  false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK_FALSE( true )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( !trueValue )
with expansion:
  false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK_FALSE( trueValue )
with expansion:
  !true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK( !(1 == 1) )
with expansion:
  false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ConditionTests.cpp: FAILED:
  CHECK_FALSE( 1 == 1 )
with expansion:
  !(1 == 1)

-------------------------------------------------------------------------------
./succeeding/exceptions/explicit
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp:
PASSED:
  REQUIRE_THROWS_AS( thisThrows() )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp:
PASSED:
  REQUIRE_NOTHROW( thisDoesntThrow() )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp:
PASSED:
  REQUIRE_THROWS( thisThrows() )

-------------------------------------------------------------------------------
./failing/exceptions/explicit
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
  CHECK_THROWS_AS( thisThrows() )
due to unexpected exception with message:
  expected exception

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
  CHECK_THROWS_AS( thisDoesntThrow() )
because no exception was thrown where one was expected:

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
  CHECK_NOTHROW( thisThrows() )
due to unexpected exception with message:
  expected exception

-------------------------------------------------------------------------------
./failing/exceptions/implicit
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
due to unexpected exception with message:
  unexpected exception

-------------------------------------------------------------------------------
./failing/exceptions/implicit/2
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp:
PASSED:
  CHECK( 1 == 1 )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
  {Unknown expression after the reported line}
due to unexpected exception with message:
  unexpected exception

-------------------------------------------------------------------------------
./failing/exceptions/implicit/3
  section name
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
due to unexpected exception with message:
  unexpected exception

-------------------------------------------------------------------------------
./failing/exceptions/implicit/4
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
  CHECK( thisThrows() == 0 )
due to unexpected exception with message:
  expected exception

-------------------------------------------------------------------------------
./succeeding/exceptions/implicit
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................


No assertions in test case './succeeding/exceptions/implicit'

-------------------------------------------------------------------------------
./failing/exceptions/custom
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
due to unexpected exception with message:
  custom exception

-------------------------------------------------------------------------------
./failing/exceptions/custom/nothrow
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
  REQUIRE_NOTHROW( throwCustom() )
due to unexpected exception with message:
  custom exception - not std

-------------------------------------------------------------------------------
./failing/exceptions/custom/throw
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
  REQUIRE_THROWS_AS( throwCustom() )
due to unexpected exception with message:
  custom exception - not std

-------------------------------------------------------------------------------
./failing/exceptions/custom/double
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp: FAILED:
due to unexpected exception with message:
  3.14

-------------------------------------------------------------------------------
./succeeding/exceptions/notimplemented
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/ExceptionTests.cpp:
PASSED:
  REQUIRE_THROWS( thisFunctionNotImplemented( 7 ) )

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  200 == 200

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  200 == 200

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  200 == 200

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  8 == 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  200 == 200

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  200 == 200

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  30 == 30

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  200 == 200

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  40 == 40

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  200 == 200

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  42 == 42

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  200 == 200

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  72 == 72

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  200 == 200

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  202 == 202

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  202 == 202

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  202 == 202

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  8 == 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  202 == 202

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  202 == 202

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  30 == 30

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  202 == 202

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  40 == 40

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  202 == 202

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  42 == 42

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  202 == 202

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  72 == 72

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  202 == 202

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  204 == 204

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  204 == 204

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  204 == 204

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  8 == 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  204 == 204

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  204 == 204

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  30 == 30

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  204 == 204

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  40 == 40

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  204 == 204

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  42 == 42

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  204 == 204

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  72 == 72

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  204 == 204

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  206 == 206

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  206 == 206

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  206 == 206

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  8 == 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  206 == 206

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  206 == 206

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  30 == 30

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  206 == 206

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  40 == 40

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  206 == 206

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  42 == 42

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  206 == 206

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  72 == 72

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  206 == 206

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  208 == 208

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  208 == 208

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  208 == 208

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  8 == 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  208 == 208

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  208 == 208

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  30 == 30

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  208 == 208

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  40 == 40

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  208 == 208

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  42 == 42

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  208 == 208

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  72 == 72

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  208 == 208

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  210 == 210

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  210 == 210

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  210 == 210

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  8 == 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  210 == 210

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  210 == 210

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  30 == 30

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  210 == 210

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  40 == 40

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  210 == 210

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  42 == 42

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  210 == 210

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  72 == 72

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  210 == 210

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  212 == 212

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  212 == 212

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  212 == 212

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  8 == 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  212 == 212

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  212 == 212

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  30 == 30

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  212 == 212

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  40 == 40

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  212 == 212

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  42 == 42

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  212 == 212

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  72 == 72

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  212 == 212

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  214 == 214

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  214 == 214

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  214 == 214

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  8 == 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  214 == 214

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  214 == 214

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  30 == 30

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  214 == 214

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  40 == 40

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  214 == 214

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  42 == 42

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  214 == 214

-------------------------------------------------------------------------------
./succeeding/generators/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( i, 2 ) == i*2 )
with expansion:
  72 == 72

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( multiply( j, 2 ) == j*2 )
with expansion:
  214 == 214

-------------------------------------------------------------------------------
./succeeding/generators/2
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( i->first == i->second-1 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
./succeeding/generators/2
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/GeneratorTests.cpp:
PASSED:
  CATCH_REQUIRE( i->first == i->second-1 )
with expansion:
  2 == 2

-------------------------------------------------------------------------------
./succeeding/message
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
warning:
  this is a message
  this is a warning


No assertions in test case './succeeding/message'

-------------------------------------------------------------------------------
./succeeding/succeed
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
with message:
  this is a success

-------------------------------------------------------------------------------
./failing/message/info/1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp: FAILED:
  REQUIRE( a == 1 )
with expansion:
  2 == 1
with messages:
  this message should be logged
  so should this

-------------------------------------------------------------------------------
./mixed/message/info/2
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  CHECK( a == 2 )
with expansion:
  2 == 2
with message:
  this message may be logged later

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp: FAILED:
  CHECK( a == 1 )
with expansion:
  2 == 1
with message:
  this message should be logged

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp: FAILED:
  CHECK( a == 0 )
with expansion:
  2 == 0
with message:
  and this, but later

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  CHECK( a == 2 )
with expansion:
  2 == 2
with message:
  but not this

-------------------------------------------------------------------------------
./failing/message/fail
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp: FAILED:
explicitly with message:
  This is a failure

-------------------------------------------------------------------------------
./failing/message/sections
  one
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp: FAILED:
explicitly with message:
  Message from section one

-------------------------------------------------------------------------------
./failing/message/sections
  two
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp: FAILED:
explicitly with message:
  Message from section two

Message from section one
-------------------------------------------------------------------------------
./succeeding/message/sections/stdout
  one
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................


No assertions in section 'one'

Message from section two
-------------------------------------------------------------------------------
./succeeding/message/sections/stdout
  two
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................


No assertions in section 'two'

-------------------------------------------------------------------------------
./mixed/message/scoped
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  REQUIRE( i < 10 )
with expansion:
  0 < 10
with messages:
  current counter 0
  i := 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  REQUIRE( i < 10 )
with expansion:
  1 < 10
with messages:
  current counter 1
  i := 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  REQUIRE( i < 10 )
with expansion:
  2 < 10
with messages:
  current counter 2
  i := 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  REQUIRE( i < 10 )
with expansion:
  3 < 10
with messages:
  current counter 3
  i := 3

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  REQUIRE( i < 10 )
with expansion:
  4 < 10
with messages:
  current counter 4
  i := 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  REQUIRE( i < 10 )
with expansion:
  5 < 10
with messages:
  current counter 5
  i := 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  REQUIRE( i < 10 )
with expansion:
  6 < 10
with messages:
  current counter 6
  i := 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  REQUIRE( i < 10 )
with expansion:
  7 < 10
with messages:
  current counter 7
  i := 7

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  REQUIRE( i < 10 )
with expansion:
  8 < 10
with messages:
  current counter 8
  i := 8

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
PASSED:
  REQUIRE( i < 10 )
with expansion:
  9 < 10
with messages:
  current counter 9
  i := 9

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp: FAILED:
  REQUIRE( i < 10 )
with expansion:
  10 < 10
with messages:
  current counter 10
  i := 10

-------------------------------------------------------------------------------
./succeeding/nofail
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp:
FAILED - but was ok:
  CHECK_NOFAIL( 1 == 2 )


No assertions in test case './succeeding/nofail'

-------------------------------------------------------------------------------
just info
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................


No assertions in test case 'just info'

-------------------------------------------------------------------------------
just failure
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MessageTests.cpp: FAILED:
explicitly with message:
  Previous info should not be seen

-------------------------------------------------------------------------------
./succeeding/Misc/Sections
  s1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( a != b )
with expansion:
  1 != 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( b != a )
with expansion:
  2 != 1

-------------------------------------------------------------------------------
./succeeding/Misc/Sections
  s2
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( a != b )
with expansion:
  1 != 2

-------------------------------------------------------------------------------
./succeeding/Misc/Sections/nested
  s1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( a != b )
with expansion:
  1 != 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( b != a )
with expansion:
  2 != 1

-------------------------------------------------------------------------------
./succeeding/Misc/Sections/nested
  s1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( a != b )
with expansion:
  1 != 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( b != a )
with expansion:
  2 != 1

-------------------------------------------------------------------------------
./succeeding/Misc/Sections/nested
  s1
  s2
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( a != b )
with expansion:
  1 != 2

-------------------------------------------------------------------------------
./mixed/Misc/Sections/nested2
  s1
  s2
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  REQUIRE( a == b )
with expansion:
  1 == 2

-------------------------------------------------------------------------------
./mixed/Misc/Sections/nested2
  s1
  s3
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( a != b )
with expansion:
  1 != 2

-------------------------------------------------------------------------------
./mixed/Misc/Sections/nested2
  s1
  s4
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( a < b )
with expansion:
  1 < 2

-------------------------------------------------------------------------------
./Sections/nested/a/b
  c
  d (leaf)
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................


No assertions in section 'd (leaf)'

-------------------------------------------------------------------------------
./Sections/nested/a/b
  c
  e (leaf)
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................


No assertions in section 'e (leaf)'

-------------------------------------------------------------------------------
./Sections/nested/a/b
  f (leaf)
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................


No assertions in section 'f (leaf)'

-------------------------------------------------------------------------------
./mixed/Misc/Sections/loops
  s1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK( b > a )
with expansion:
  0 > 1

-------------------------------------------------------------------------------
./mixed/Misc/loops
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK( ( fib[i] % 2 ) == 0 )
with expansion:
  1 == 0
with message:
  Testing if fib[0] (1) is even

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK( ( fib[i] % 2 ) == 0 )
with expansion:
  1 == 0
with message:
  Testing if fib[1] (1) is even

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECK( ( fib[i] % 2 ) == 0 )
with expansion:
  0 == 0
with message:
  Testing if fib[2] (2) is even

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK( ( fib[i] % 2 ) == 0 )
with expansion:
  1 == 0
with message:
  Testing if fib[3] (3) is even

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK( ( fib[i] % 2 ) == 0 )
with expansion:
  1 == 0
with message:
  Testing if fib[4] (5) is even

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECK( ( fib[i] % 2 ) == 0 )
with expansion:
  0 == 0
with message:
  Testing if fib[5] (8) is even

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK( ( fib[i] % 2 ) == 0 )
with expansion:
  1 == 0
with message:
  Testing if fib[6] (13) is even

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK( ( fib[i] % 2 ) == 0 )
with expansion:
  1 == 0
with message:
  Testing if fib[7] (21) is even

Some information
An error
-------------------------------------------------------------------------------
./succeeding/Misc/stdout,stderr
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................


No assertions in test case './succeeding/Misc/stdout,stderr'

-------------------------------------------------------------------------------
./succeeding/Misc/null strings
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( makeString( false ) != static_cast<char*>(__null) )
with expansion:
  "valid string" != {null string}

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( makeString( true ) == static_cast<char*>(__null) )
with expansion:
  {null string} == {null string}

-------------------------------------------------------------------------------
./failing/info
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  REQUIRE( false )
with messages:
  hi
  i := 7

-------------------------------------------------------------------------------
./succeeding/checkedif
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECKED_IF( flag )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( testCheckedIf( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
./failing/checkedif
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECKED_IF( flag )
with expansion:
  false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  REQUIRE( testCheckedIf( false ) )
with expansion:
  false

-------------------------------------------------------------------------------
./succeeding/checkedelse
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECKED_ELSE( flag )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( testCheckedElse( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
./failing/checkedelse
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECKED_ELSE( flag )
with expansion:
  false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  REQUIRE( testCheckedElse( false ) )
with expansion:
  false

-------------------------------------------------------------------------------
./misc/xmlentitycheck
  embedded xml
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................


No assertions in section 'embedded xml'

-------------------------------------------------------------------------------
./misc/xmlentitycheck
  encoded chars
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................


No assertions in section 'encoded chars'

-------------------------------------------------------------------------------
./manual/onechar
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  REQUIRE( false )
with message:
  3

-------------------------------------------------------------------------------
./succeeding/atomic if
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( x == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
./succeeding/matchers
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE_THAT( testStringForMatching() Contains( "string" ) )
with expansion:
  "this string contains 'abc' as a substring" contains: "string"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECK_THAT( testStringForMatching() Contains( "abc" ) )
with expansion:
  "this string contains 'abc' as a substring" contains: "abc"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECK_THAT( testStringForMatching() StartsWith( "this" ) )
with expansion:
  "this string contains 'abc' as a substring" starts with: "this"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECK_THAT( testStringForMatching() EndsWith( "substring" ) )
with expansion:
  "this string contains 'abc' as a substring" ends with: "substring"

-------------------------------------------------------------------------------
./failing/matchers/Contains
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK_THAT( testStringForMatching() Contains( "not there" ) )
with expansion:
  "this string contains 'abc' as a substring" contains: "not there"

-------------------------------------------------------------------------------
./failing/matchers/StartsWith
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK_THAT( testStringForMatching() StartsWith( "string" ) )
with expansion:
  "this string contains 'abc' as a substring" starts with: "string"

-------------------------------------------------------------------------------
./failing/matchers/EndsWith
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK_THAT( testStringForMatching() EndsWith( "this" ) )
with expansion:
  "this string contains 'abc' as a substring" ends with: "this"

-------------------------------------------------------------------------------
./failing/matchers/Equals
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
  CHECK_THAT( testStringForMatching() Equals( "something else" ) )
with expansion:
  "this string contains 'abc' as a substring" equals: "something else"

-------------------------------------------------------------------------------
string
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE_THAT( "" Equals(__null) )
with expansion:
  "" equals: ""

-------------------------------------------------------------------------------
./succeeding/matchers/AllOf
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECK_THAT( testStringForMatching() AllOf( Catch::Contains( "string" ), Catch::Contains( "abc" ) ) )
with expansion:
  "this string contains 'abc' as a substring" ( contains: "string" and
  contains: "abc" )

-------------------------------------------------------------------------------
./succeeding/matchers/AnyOf
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECK_THAT( testStringForMatching() AnyOf( Catch::Contains( "string" ), Catch::Contains( "not there" ) ) )
with expansion:
  "this string contains 'abc' as a substring" ( contains: "string" or contains:
  "not there" )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECK_THAT( testStringForMatching() AnyOf( Catch::Contains( "not there" ), Catch::Contains( "string" ) ) )
with expansion:
  "this string contains 'abc' as a substring" ( contains: "not there" or
  contains: "string" )

-------------------------------------------------------------------------------
./succeeding/matchers/Equals
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  CHECK_THAT( testStringForMatching() Equals( "this string contains 'abc' as a substring" ) )
with expansion:
  "this string contains 'abc' as a substring" equals: "this string contains
  'abc' as a substring"

-------------------------------------------------------------------------------
Factorials are computed
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( Factorial(0) == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( Factorial(1) == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( Factorial(2) == 2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( Factorial(3) == 6 )
with expansion:
  6 == 6

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( Factorial(10) == 3628800 )
with expansion:
  0x<hex digits> == 3628800

-------------------------------------------------------------------------------
empty
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................


No assertions in test case 'empty'

-------------------------------------------------------------------------------
Nice descriptive name
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
warning:
  This one ran


No assertions in test case 'Nice descriptive name'

-------------------------------------------------------------------------------
first tag
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................


No assertions in test case 'first tag'

-------------------------------------------------------------------------------
second tag
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................


No assertions in test case 'second tag'

-------------------------------------------------------------------------------
vectors can be sized and resized
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 5 )
with expansion:
  5 >= 5

-------------------------------------------------------------------------------
vectors can be sized and resized
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 5 )
with expansion:
  5 >= 5

-------------------------------------------------------------------------------
vectors can be sized and resized
  resizing bigger changes size and capacity
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 10 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 10 )
with expansion:
  10 >= 10

-------------------------------------------------------------------------------
vectors can be sized and resized
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 5 )
with expansion:
  5 >= 5

-------------------------------------------------------------------------------
vectors can be sized and resized
  resizing smaller changes size but not capacity
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 5 )
with expansion:
  5 >= 5

-------------------------------------------------------------------------------
vectors can be sized and resized
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 5 )
with expansion:
  5 >= 5

-------------------------------------------------------------------------------
vectors can be sized and resized
  resizing smaller changes size but not capacity
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 5 )
with expansion:
  5 >= 5

-------------------------------------------------------------------------------
vectors can be sized and resized
  resizing smaller changes size but not capacity
  We can use the 'swap trick' to reset the capacity
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
vectors can be sized and resized
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 5 )
with expansion:
  5 >= 5

-------------------------------------------------------------------------------
vectors can be sized and resized
  reserving bigger changes capacity but not size
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 10 )
with expansion:
  10 >= 10

-------------------------------------------------------------------------------
vectors can be sized and resized
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 5 )
with expansion:
  5 >= 5

-------------------------------------------------------------------------------
vectors can be sized and resized
  reserving smaller does not change size or capacity
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.size() == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 5 )
with expansion:
  5 >= 5

-------------------------------------------------------------------------------
./failing/CatchSectionInfiniteLoop
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
explicitly with message:
  to infinity and beyond

-------------------------------------------------------------------------------
./failing/CatchSectionInfiniteLoop
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
explicitly with message:
  to infinity and beyond

-------------------------------------------------------------------------------
./failing/CatchSectionInfiniteLoop
  Outer
  Inner
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp:
PASSED:
with message:
  that's not flying - that's failing in style

-------------------------------------------------------------------------------
./failing/CatchSectionInfiniteLoop
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/MiscTests.cpp: FAILED:
explicitly with message:
  to infinity and beyond

-------------------------------------------------------------------------------
selftest/main
  selftest/expected result
  selftest/expected result/failing tests
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests failed, as expected

-------------------------------------------------------------------------------
selftest/main
  selftest/expected result
  selftest/expected result/succeeding tests
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Message from section one
Message from section two
Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Some information
An error
Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Users/philnash/Dev/OSS/Catch/projects/SelfTest/catch_self_test.hpp:
PASSED:
with message:
  Tests passed, as expected

Message from section one
Message from section two
Some information
An error
-------------------------------------------------------------------------------
selftest/main
  selftest/test counts
  selftest/test counts/succeeding tests
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( totals.assertions.passed == 298 )
with expansion:
  298 == 298

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( totals.assertions.failed == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
selftest/main
  selftest/test counts
  selftest/test counts/failing tests
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( totals.assertions.passed == 2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( totals.assertions.failed == 77 )
with expansion:
  77 == 77

-------------------------------------------------------------------------------
meta/Misc/Sections
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( totals.assertions.passed == 2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( totals.assertions.failed == 1 )
with expansion:
  1 == 1

-------------------------------------------------------------------------------
Process can be configured on command line
  default - no arguments
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( config.shouldDebugBreak == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( config.abortAfter == -1 )
with expansion:
  -1 == -1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( config.noThrow == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( config.reporterName.empty() )
with expansion:
  true

-------------------------------------------------------------------------------
Process can be configured on command line
  test lists
  1 test
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters().size() == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters()[0].shouldInclude( fakeTestCase( "notIncluded" ) ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters()[0].shouldInclude( fakeTestCase( "test1" ) ) )
with expansion:
  true

-------------------------------------------------------------------------------
Process can be configured on command line
  test lists
  Specify one test case exclusion using exclude:
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters().size() == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters()[0].shouldInclude( fakeTestCase( "test1" ) ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters()[0].shouldInclude( fakeTestCase( "alwaysIncluded" ) ) )
with expansion:
  true

-------------------------------------------------------------------------------
Process can be configured on command line
  test lists
  Specify one test case exclusion using ~
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters().size() == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters()[0].shouldInclude( fakeTestCase( "test1" ) ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters()[0].shouldInclude( fakeTestCase( "alwaysIncluded" ) ) )
with expansion:
  true

-------------------------------------------------------------------------------
Process can be configured on command line
  test lists
  Specify two test cases using -t
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters().size() == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters()[0].shouldInclude( fakeTestCase( "notIncluded" ) ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters()[0].shouldInclude( fakeTestCase( "test1" ) ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( cfg.filters()[0].shouldInclude( fakeTestCase( "test2" ) ) )
with expansion:
  true

-------------------------------------------------------------------------------
Process can be configured on command line
  reporter
  -r/console
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.reporterName == "console" )
with expansion:
  "console" == "console"

-------------------------------------------------------------------------------
Process can be configured on command line
  reporter
  -r/xml
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.reporterName == "xml" )
with expansion:
  "xml" == "xml"

-------------------------------------------------------------------------------
Process can be configured on command line
  reporter
  --reporter/junit
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.reporterName == "junit" )
with expansion:
  "junit" == "junit"

-------------------------------------------------------------------------------
Process can be configured on command line
  debugger
  -b
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.shouldDebugBreak == true )
with expansion:
  true == true

-------------------------------------------------------------------------------
Process can be configured on command line
  debugger
  --break
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.shouldDebugBreak )
with expansion:
  true

-------------------------------------------------------------------------------
Process can be configured on command line
  abort
  -a aborts after first failure
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.abortAfter == 1 )
with expansion:
  1 == 1

-------------------------------------------------------------------------------
Process can be configured on command line
  abort
  -x 2 aborts after two failures
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.abortAfter == 2 )
with expansion:
  2 == 2

-------------------------------------------------------------------------------
Process can be configured on command line
  abort
  -x must be greater than zero
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE_THAT( parseIntoConfigAndReturnError( argv, config ) Contains( "greater than zero" ) )
with expansion:
  "Value after -x or --abortAfter must be greater than zero
  - while parsing: (-x, --abortx <number of failures>)" contains: "greater than
  zero"

-------------------------------------------------------------------------------
Process can be configured on command line
  abort
  -x must be numeric
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE_THAT( parseIntoConfigAndReturnError( argv, config ) Contains( "-x" ) )
with expansion:
  "Unable to convert oops to destination type
  - while parsing: (-x, --abortx <number of failures>)" contains: "-x"

-------------------------------------------------------------------------------
Process can be configured on command line
  nothrow
  -e
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.noThrow == true )
with expansion:
  true == true

-------------------------------------------------------------------------------
Process can be configured on command line
  nothrow
  --nothrow
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.noThrow == true )
with expansion:
  true == true

-------------------------------------------------------------------------------
Process can be configured on command line
  output filename
  -o filename
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.outputFilename == "filename.ext" )
with expansion:
  "filename.ext" == "filename.ext"

-------------------------------------------------------------------------------
Process can be configured on command line
  output filename
  --out
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( config.outputFilename == "filename.ext" )
with expansion:
  "filename.ext" == "filename.ext"

-------------------------------------------------------------------------------
Process can be configured on command line
  combinations
  Single character flags can be combined
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_NOTHROW( parseIntoConfig( argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( config.abortAfter == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( config.shouldDebugBreak )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( config.noThrow == true )
with expansion:
  true == true

-------------------------------------------------------------------------------
selftest/test filter
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchAny.shouldInclude( fakeTestCase( "any" ) ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchNone.shouldInclude( fakeTestCase( "any" ) ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchHidden.shouldInclude( fakeTestCase( "any" ) ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchNonHidden.shouldInclude( fakeTestCase( "any" ) ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchHidden.shouldInclude( fakeTestCase( "./any" ) ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchNonHidden.shouldInclude( fakeTestCase( "./any" ) ) == false )
with expansion:
  false == false

-------------------------------------------------------------------------------
selftest/test filters
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchHidden.shouldInclude( fakeTestCase( "./something" ) ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( filters.shouldInclude( fakeTestCase( "any" ) ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( filters.shouldInclude( fakeTestCase( "./something" ) ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( filters.shouldInclude( fakeTestCase( "./anything" ) ) == false )
with expansion:
  false == false

-------------------------------------------------------------------------------
selftest/filter/prefix wildcard
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchBadgers.shouldInclude( fakeTestCase( "big badger" ) ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchBadgers.shouldInclude( fakeTestCase( "little badgers" ) ) == false )
with expansion:
  false == false

-------------------------------------------------------------------------------
selftest/filter/wildcard at both ends
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchBadgers.shouldInclude( fakeTestCase( "big badger" ) ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchBadgers.shouldInclude( fakeTestCase( "little badgers" ) ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchBadgers.shouldInclude( fakeTestCase( "badgers are big" ) ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( matchBadgers.shouldInclude( fakeTestCase( "hedgehogs" ) ) == false )
with expansion:
  false == false

-------------------------------------------------------------------------------
selftest/tags
  one tag
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.getTestCaseInfo().description == "" )
with expansion:
  "" == ""

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.hasTag( "one" ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.getTags().size() == 1 )
with expansion:
  1 == 1

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.matchesTags( p1 ) == true )
with expansion:
  true == true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.matchesTags( p2 ) == true )
with expansion:
  true == true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.matchesTags( p3 ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.matchesTags( p4 ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.matchesTags( p5 ) == false )
with expansion:
  false == false

-------------------------------------------------------------------------------
selftest/tags
  two tags
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.getTestCaseInfo().description == "" )
with expansion:
  "" == ""

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.hasTag( "one" ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.hasTag( "two" ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.hasTag( "Two" ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.hasTag( "three" ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.getTags().size() == 2 )
with expansion:
  2 == 2

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.matchesTags( p1 ) == true )
with expansion:
  true == true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.matchesTags( p2 ) == true )
with expansion:
  true == true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.matchesTags( p3 ) == true )
with expansion:
  true == true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.matchesTags( p4 ) == true )
with expansion:
  true == true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( twoTags.matchesTags( p5 ) == true )
with expansion:
  true == true

-------------------------------------------------------------------------------
selftest/tags
  complex
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( fakeTestCase( "test", "[one][.]" ).matchesTags( p1 ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_FALSE( fakeTestCase( "test", "[one][.]" ).matchesTags( p5 ) )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( fakeTestCase( "test", "[three]" ).matchesTags( p4 ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( fakeTestCase( "test", "[three]" ).matchesTags( p5 ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( fakeTestCase( "test", "[three]" ).matchesTags( "[three]~[one]" ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( fakeTestCase( "test", "[unit][not_apple]" ).matchesTags( "[unit]" ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK_FALSE( fakeTestCase( "test", "[unit][not_apple]" ).matchesTags( "[unit]~[not_apple]" ) )
with expansion:
  !false

-------------------------------------------------------------------------------
selftest/tags
  one tag with characters either side
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTagWithExtras.getTestCaseInfo().description == "1234" )
with expansion:
  "1234" == "1234"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTagWithExtras.hasTag( "one" ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTagWithExtras.hasTag( "two" ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTagWithExtras.getTags().size() == 1 )
with expansion:
  1 == 1

-------------------------------------------------------------------------------
selftest/tags
  start of a tag, but not closed
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTagOpen.getTestCaseInfo().description == "[one" )
with expansion:
  "[one" == "[one"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTagOpen.hasTag( "one" ) == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTagOpen.getTags().size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
selftest/tags
  hidden
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.getTestCaseInfo().description == "" )
with expansion:
  "" == ""

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.hasTag( "." ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.isHidden() )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( oneTag.matchesTags( "~[.]" ) == false )
with expansion:
  false == false

-------------------------------------------------------------------------------
Long strings can be wrapped
  plain string
  No wrapping
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 80 ) ).toString() == testString )
with expansion:
  "one two three four"
  ==
  "one two three four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 18 ) ).toString() == testString )
with expansion:
  "one two three four"
  ==
  "one two three four"

-------------------------------------------------------------------------------
Long strings can be wrapped
  plain string
  Wrapped once
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 17 ) ).toString() == "one two three\nfour" )
with expansion:
  "one two three
  four"
  ==
  "one two three
  four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 16 ) ).toString() == "one two three\nfour" )
with expansion:
  "one two three
  four"
  ==
  "one two three
  four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 14 ) ).toString() == "one two three\nfour" )
with expansion:
  "one two three
  four"
  ==
  "one two three
  four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 13 ) ).toString() == "one two three\nfour" )
with expansion:
  "one two three
  four"
  ==
  "one two three
  four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 12 ) ).toString() == "one two\nthree four" )
with expansion:
  "one two
  three four"
  ==
  "one two
  three four"

-------------------------------------------------------------------------------
Long strings can be wrapped
  plain string
  Wrapped twice
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 9 ) ).toString() == "one two\nthree\nfour" )
with expansion:
  "one two
  three
  four"
  ==
  "one two
  three
  four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 8 ) ).toString() == "one two\nthree\nfour" )
with expansion:
  "one two
  three
  four"
  ==
  "one two
  three
  four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 7 ) ).toString() == "one two\nthree\nfour" )
with expansion:
  "one two
  three
  four"
  ==
  "one two
  three
  four"

-------------------------------------------------------------------------------
Long strings can be wrapped
  plain string
  Wrapped three times
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 6 ) ).toString() == "one\ntwo\nthree\nfour" )
with expansion:
  "one
  two
  three
  four"
  ==
  "one
  two
  three
  four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 5 ) ).toString() == "one\ntwo\nthree\nfour" )
with expansion:
  "one
  two
  three
  four"
  ==
  "one
  two
  three
  four"

-------------------------------------------------------------------------------
Long strings can be wrapped
  plain string
  Short wrap
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( "abcdef", TextAttributes().setWidth( 4 ) ).toString() == "abc-\ndef" )
with expansion:
  "abc-
  def"
  ==
  "abc-
  def"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( "abcdefg", TextAttributes().setWidth( 4 ) ).toString() == "abc-\ndefg" )
with expansion:
  "abc-
  defg"
  ==
  "abc-
  defg"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( "abcdefgh", TextAttributes().setWidth( 4 ) ).toString() == "abc-\ndef-\ngh" )
with expansion:
  "abc-
  def-
  gh"
  ==
  "abc-
  def-
  gh"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 4 ) ).toString() == "one\ntwo\nthr-\nee\nfour" )
with expansion:
  "one
  two
  thr-
  ee
  four"
  ==
  "one
  two
  thr-
  ee
  four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 3 ) ).toString() == "one\ntwo\nth-\nree\nfo-\nur" )
with expansion:
  "one
  two
  th-
  ree
  fo-
  ur"
  ==
  "one
  two
  th-
  ree
  fo-
  ur"

-------------------------------------------------------------------------------
Long strings can be wrapped
  plain string
  As container
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  REQUIRE( text.size() == 4 )
with expansion:
  4 == 4

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( text[0] == "one" )
with expansion:
  "one" == "one"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( text[1] == "two" )
with expansion:
  "two" == "two"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( text[2] == "three" )
with expansion:
  "three" == "three"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( text[3] == "four" )
with expansion:
  "four" == "four"

-------------------------------------------------------------------------------
Long strings can be wrapped
  plain string
  Indent first line differently
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( text.toString() == " one two\n    three\n    four" )
with expansion:
  " one two
      three
      four"
  ==
  " one two
      three
      four"

-------------------------------------------------------------------------------
Long strings can be wrapped
  With newlines
  No wrapping
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 80 ) ).toString() == testString )
with expansion:
  "one two
  three four"
  ==
  "one two
  three four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 18 ) ).toString() == testString )
with expansion:
  "one two
  three four"
  ==
  "one two
  three four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 10 ) ).toString() == testString )
with expansion:
  "one two
  three four"
  ==
  "one two
  three four"

-------------------------------------------------------------------------------
Long strings can be wrapped
  With newlines
  Trailing newline
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( "abcdef\n", TextAttributes().setWidth( 10 ) ).toString() == "abcdef\n" )
with expansion:
  "abcdef
  "
  ==
  "abcdef
  "

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( "abcdef", TextAttributes().setWidth( 6 ) ).toString() == "abcdef" )
with expansion:
  "abcdef" == "abcdef"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( "abcdef\n", TextAttributes().setWidth( 6 ) ).toString() == "abcdef\n" )
with expansion:
  "abcdef
  "
  ==
  "abcdef
  "

-------------------------------------------------------------------------------
Long strings can be wrapped
  With newlines
  Wrapped once
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 9 ) ).toString() == "one two\nthree\nfour" )
with expansion:
  "one two
  three
  four"
  ==
  "one two
  three
  four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 8 ) ).toString() == "one two\nthree\nfour" )
with expansion:
  "one two
  three
  four"
  ==
  "one two
  three
  four"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 7 ) ).toString() == "one two\nthree\nfour" )
with expansion:
  "one two
  three
  four"
  ==
  "one two
  three
  four"

-------------------------------------------------------------------------------
Long strings can be wrapped
  With newlines
  Wrapped twice
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 6 ) ).toString() == "one\ntwo\nthree\nfour" )
with expansion:
  "one
  two
  three
  four"
  ==
  "one
  two
  three
  four"

-------------------------------------------------------------------------------
Long strings can be wrapped
  With tabs
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( testString, TextAttributes().setWidth( 15 ) ).toString() == "one two three\n        four\n        five\n        six" )
with expansion:
  "one two three
          four
          five
          six"
  ==
  "one two three
          four
          five
          six"

hello
hello
-------------------------------------------------------------------------------
Strings can be rendered with colour
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................


No assertions in test case 'Strings can be rendered with colour'

-------------------------------------------------------------------------------
Text can be formatted using the Text class
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( "hi there" ).toString() == "hi there" )
with expansion:
  "hi there" == "hi there"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TestMain.cpp:
PASSED:
  CHECK( Text( "hi there", narrow ).toString() == "hi\nthere" )
with expansion:
  "hi
  there"
  ==
  "hi
  there"

-------------------------------------------------------------------------------
./succeeding/Tricky/std::pair
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( (std::pair<int, int>( 1, 2 )) == aNicePair )
with expansion:
  std::pair( 1, 2 ) == std::pair( 1, 2 )

-------------------------------------------------------------------------------
./inprogress/failing/Tricky/trailing expression
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
warning:
  Uncomment the code in this test to check that it gives a sensible compiler
  error


No assertions in test case './inprogress/failing/Tricky/trailing expression'

-------------------------------------------------------------------------------
./inprogress/failing/Tricky/compound lhs
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
warning:
  Uncomment the code in this test to check that it gives a sensible compiler
  error


No assertions in test case './inprogress/failing/Tricky/compound lhs'

-------------------------------------------------------------------------------
./failing/Tricky/non streamable type
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp: FAILED:
  CHECK( &o1 == &o2 )
with expansion:
  0x<hex digits> == 0x<hex digits>

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp: FAILED:
  CHECK( o1 == o2 )
with expansion:
  {?} == {?}

-------------------------------------------------------------------------------
./failing/string literals
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp: FAILED:
  REQUIRE( std::string( "first" ) == "second" )
with expansion:
  "first" == "second"

-------------------------------------------------------------------------------
./succeeding/side-effects
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( i++ == 7 )
with expansion:
  7 == 7

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( i++ == 8 )
with expansion:
  8 == 8

-------------------------------------------------------------------------------
./succeeding/koenig
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( 0x<hex digits> == o )
with expansion:
  0x<hex digits> == {?}

-------------------------------------------------------------------------------
./succeeding/non-const==
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( t == 1u )
with expansion:
  {?} == 1

-------------------------------------------------------------------------------
./succeeding/enum/bits
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( 0x<hex digits> == bit30and31 )
with expansion:
  0x<hex digits> == 3221225472

-------------------------------------------------------------------------------
./succeeding/boolean member
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( obj.prop != __null )
with expansion:
  0x<hex digits> != 0

-------------------------------------------------------------------------------
./succeeding/unimplemented static bool
  compare to true
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( is_true<true>::value == true )
with expansion:
  true == true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( true == is_true<true>::value )
with expansion:
  true == true

-------------------------------------------------------------------------------
./succeeding/unimplemented static bool
  compare to false
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( is_true<false>::value == false )
with expansion:
  false == false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( false == is_true<false>::value )
with expansion:
  false == false

-------------------------------------------------------------------------------
./succeeding/unimplemented static bool
  negation
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( !is_true<false>::value )
with expansion:
  true

-------------------------------------------------------------------------------
./succeeding/unimplemented static bool
  double negation
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( !!is_true<true>::value )
with expansion:
  true

-------------------------------------------------------------------------------
./succeeding/unimplemented static bool
  direct
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( is_true<true>::value )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE_FALSE( is_true<false>::value )
with expansion:
  !false

-------------------------------------------------------------------------------
./succeeding/SafeBool
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  CHECK( True )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  CHECK( !False )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  CHECK_FALSE( False )
with expansion:
  !false

-------------------------------------------------------------------------------
Assertions then sections
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( Catch::isTrue( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
Assertions then sections
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( Catch::isTrue( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
Assertions then sections
  A section
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( Catch::isTrue( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
Assertions then sections
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( Catch::isTrue( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
Assertions then sections
  A section
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( Catch::isTrue( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
Assertions then sections
  A section
  Another section
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( Catch::isTrue( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
Assertions then sections
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( Catch::isTrue( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
Assertions then sections
  A section
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( Catch::isTrue( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
Assertions then sections
  A section
  Another other section
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( Catch::isTrue( true ) )
with expansion:
  true

-------------------------------------------------------------------------------
non streamable - with conv. op
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( s == "7" )
with expansion:
  "7" == "7"

-------------------------------------------------------------------------------
Comparing function pointers
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( a )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( a == &foo )
with expansion:
  1 == 1

-------------------------------------------------------------------------------
pointer to class
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:
  REQUIRE( p == 0 )
with expansion:
  __null == 0

-------------------------------------------------------------------------------
X/level/0/a
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:

-------------------------------------------------------------------------------
X/level/0/b
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:

-------------------------------------------------------------------------------
X/level/1/a
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:

-------------------------------------------------------------------------------
X/level/1/b
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/TrickyTests.cpp:
PASSED:

-------------------------------------------------------------------------------
Anonymous test case 1
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/VariadicMacrosTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/VariadicMacrosTests.cpp:
PASSED:
with message:
  anonymous test case

-------------------------------------------------------------------------------
Test case with one argument
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/VariadicMacrosTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/VariadicMacrosTests.cpp:
PASSED:
with message:
  no assertions

-------------------------------------------------------------------------------
Variadic macros
  Section with one argument
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/VariadicMacrosTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/VariadicMacrosTests.cpp:
PASSED:
with message:
  no assertions

-------------------------------------------------------------------------------
Scenario: Do that thing with the thing
     Given: This stuff exists
      When: I do this
      Then: it should do this
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( itDoesThis() )
with expansion:
  true

-------------------------------------------------------------------------------
Scenario: Do that thing with the thing
     Given: This stuff exists
      When: I do this
      Then: it should do this
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( itDoesThis() )
with expansion:
  true

-------------------------------------------------------------------------------
Scenario: Do that thing with the thing
     Given: This stuff exists
      When: I do this
      Then: it should do this
       And: do that
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( itDoesThat() )
with expansion:
  true

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
      When: it is made larger
      Then: the size and capacity go up
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 10 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 10 )
with expansion:
  10 >= 10

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
      When: it is made larger
      Then: the size and capacity go up
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 10 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 10 )
with expansion:
  10 >= 10

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
      When: it is made larger
      Then: the size and capacity go up
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 10 )
with expansion:
  10 == 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 10 )
with expansion:
  10 >= 10

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
      When: it is made larger
      Then: the size and capacity go up
  And when: it is made smaller again
      Then: the size goes down but the capacity stays the same
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 5 )
with expansion:
  5 == 5

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 10 )
with expansion:
  10 >= 10

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
      When: we reserve more space
      Then: The capacity is increased but the size remains the same
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.capacity() >= 10 )
with expansion:
  10 >= 10

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: This is a really long scenario name to see how the list command deals
          with wrapping
     Given: A section name that is so long that it cannot fit in a single
            console width
      When: The test headers are printed as part of the normal running of the
            scenario
      Then: The, deliberately very long and overly verbose (you see what I did
            there?) section names must wrap, along with an indent
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/BDDTests.cpp:
PASSED:
with message:
  boo!

-------------------------------------------------------------------------------
cmdline
  process name
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  CHECK( config.processName == "test" )
with expansion:
  "test" == "test"

-------------------------------------------------------------------------------
cmdline
  arg separated by spaces
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  CHECK( config.fileName == "filename.ext" )
with expansion:
  "filename.ext" == "filename.ext"

-------------------------------------------------------------------------------
cmdline
  arg separated by colon
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  CHECK( config.fileName == "filename.ext" )
with expansion:
  "filename.ext" == "filename.ext"

-------------------------------------------------------------------------------
cmdline
  arg separated by =
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  CHECK( config.fileName == "filename.ext" )
with expansion:
  "filename.ext" == "filename.ext"

-------------------------------------------------------------------------------
cmdline
  long opt
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  CHECK( config.fileName == "%stdout" )
with expansion:
  "%stdout" == "%stdout"

-------------------------------------------------------------------------------
cmdline
  a number
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  CHECK( config.number == 42 )
with expansion:
  42 == 42

-------------------------------------------------------------------------------
cmdline
  not a number
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  CHECK_THROWS( parseInto( cli, argv, config ) )

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  CHECK( config.number == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
cmdline
  two parsers
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  CHECK( config1.number == 42 )
with expansion:
  42 == 42

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  REQUIRE_FALSE( unusedTokens.empty() )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  CHECK( config2.description == "some text" )
with expansion:
  "some text" == "some text"

-------------------------------------------------------------------------------
cmdline
  methods
  in range
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  REQUIRE( config.index == 3 )
with expansion:
  3 == 3

-------------------------------------------------------------------------------
cmdline
  methods
  out of range
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  REQUIRE_THROWS( parseInto( cli, argv, config ) )

-------------------------------------------------------------------------------
cmdline
  flags
  set
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  REQUIRE( config.flag )
with expansion:
  true

-------------------------------------------------------------------------------
cmdline
  flags
  not set
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  REQUIRE( config.flag == false )
with expansion:
  false == false

-------------------------------------------------------------------------------
cmdline
  positional
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  REQUIRE( config.firstPos == "1st" )
with expansion:
  "1st" == "1st"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  REQUIRE( config.secondPos == "2nd" )
with expansion:
  "2nd" == "2nd"

Users/philnash/Dev/OSS/Catch/projects/SelfTest/CmdLineTests.cpp:
PASSED:
  REQUIRE( config.unpositional == "3rd" )
with expansion:
  "3rd" == "3rd"

-------------------------------------------------------------------------------
section tracking
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

-------------------------------------------------------------------------------
section tracking
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

-------------------------------------------------------------------------------
section tracking
  test case with no sections
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK( testCaseTracker.isCompleted() )
with expansion:
  true

-------------------------------------------------------------------------------
section tracking
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

-------------------------------------------------------------------------------
section tracking
  test case with one section
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.enterSection( section1Name ) )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK( testCaseTracker.enterSection( section1Name ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK( testCaseTracker.isCompleted() )
with expansion:
  true

-------------------------------------------------------------------------------
section tracking
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

-------------------------------------------------------------------------------
section tracking
  test case with two consecutive sections
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.enterSection( section1Name ) )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.enterSection( section2Name ) )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK( testCaseTracker.enterSection( section1Name ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.enterSection( section2Name ) )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.enterSection( section1Name ) )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK( testCaseTracker.enterSection( section2Name ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK( testCaseTracker.isCompleted() )
with expansion:
  true

-------------------------------------------------------------------------------
section tracking
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

-------------------------------------------------------------------------------
section tracking
  test case with one section within another
-------------------------------------------------------------------------------
Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp
...............................................................................

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.enterSection( section1Name ) )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK( testCaseTracker.enterSection( section1Name ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.enterSection( section2Name ) )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK_FALSE( testCaseTracker.isCompleted() )
with expansion:
  !false

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK( testCaseTracker.enterSection( section1Name ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK( testCaseTracker.enterSection( section2Name ) )
with expansion:
  true

Users/philnash/Dev/OSS/Catch/projects/SelfTest/SectionTrackerTests.cpp:
PASSED:
  CHECK( testCaseTracker.isCompleted() )
with expansion:
  true

===============================================================================
121 test cases - 50 failed (763 assertions - 109 failed)

